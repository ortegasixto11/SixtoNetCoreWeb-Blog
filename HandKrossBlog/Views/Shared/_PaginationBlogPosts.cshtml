@model HandKrossBlog.ViewModels.BlogPostsIndex

@{
    var firstItem = Model.LastBlogPost;

    var prevDisabled = !Model.BlogPosts.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.BlogPosts.HasNextPage ? "disabled" : "";
    int pageMinus = Model.BlogPosts.PageIndex - 1;
    int pagePlus = Model.BlogPosts.PageIndex + 1;
}

<style>
    .card-footer {
        padding: .25rem 1.25rem;
    }

    .avatar-image{
        height: 60px;
        width: 60px;
    }

    @@media (max-width: 575.98px) { 
        .avatar-image{
            height: 50px;
            width: 50px;
        }
    }
</style>

@foreach (var item in Model.BlogPosts)
{
    <div class="card @(firstItem == item ? "card-active" : "" ) " id="card_post_id_@item.Id" onclick="cardPost_Click('@item.Id')">
        <div class="card-body" style="padding-top: 10px !important; padding-bottom: 10px !important;">
            <div class="row">
                <div class="col-2 d-flex justify-content-center">
                    <img class="rounded-circle avatar-image align-self-center" src="@item.AvatarUrl" alt="">
                </div>

                <div class="col-10">
                    <h5 class="card-title font-weight-bold" style="color: #3157A7"> @item.Title </h5>
                    <p class="text-muted"> @item.Fullname @item.Specialty_customized </p>
                </div>
            </div>
        </div>
        <div class="card-footer text-muted text-center">
            @*<img class="rounded-circle" src="@item.AvatarUrl" alt="" height="40px">*@
            @item.DateCreated.ToString("MMMM, d yyyy") &nbsp;
            <span id="span_comment_number_post_id_@item.Id">
                <i class="fas fa-comment-alt"></i> @item.BlogPostComments.Count()
            </span> @(item.BlogPostComments.Count() > 1 ? "comments" : "comment") &nbsp;
            <i class="fas fa-eye"></i> <span id="span_number_visits_post_id_@item.Id"> @item.BlogPostVisits.Count() </span> visits
        </div>
    </div>

    <br />
}


@if (Model.ShowNavbarPagination)
{
    <nav aria-label="...">
        <ul class="pagination justify-content-center">
            <!-- Boton de Previous -->
            <li class="page-item @prevDisabled">
                <button class="page-link" onclick="loadSectionPostPaginated(@pageMinus)">Previous</button>
            </li>


            @if (!Model.BlogPosts.HasPreviousPage)
            {
                <li class="page-item active">
                    <button class="page-link" onclick="loadSectionPostPaginated(@Model.BlogPosts.PageIndex)">@Model.BlogPosts.PageIndex</button>
                </li>
            }
            @if (!Model.BlogPosts.HasNextPage && pageMinus >= Model.BlogPosts.TotalPages - 2)
            {
                int pageMinusMinus = pageMinus - 1;
                <li class="page-item">
                    <button class="page-link" onclick="loadSectionPostPaginated(@pageMinusMinus)">@pageMinusMinus</button>
                </li>
            }


            @if (Model.BlogPosts.HasPreviousPage)
            {
                <li class="page-item">
                    <button class="page-link" onclick="loadSectionPostPaginated(@pageMinus)">@pageMinus</button>
                </li>
            }

            @if (Model.BlogPosts.HasPreviousPage && Model.BlogPosts.HasNextPage)
            {
                <li class="page-item active">
                    <button class="page-link" onclick="loadSectionPostPaginated(@Model.BlogPosts.PageIndex)">@Model.BlogPosts.PageIndex</button>
                </li>
            }


            @if (Model.BlogPosts.HasNextPage)
            {
                <li class="page-item">
                    <button class="page-link" onclick="loadSectionPostPaginated(@pagePlus)">@pagePlus</button>
                </li>
            }


            @if (!Model.BlogPosts.HasPreviousPage && pagePlus <= Model.BlogPosts.TotalPages - 1)
            {
                int pagePlusPlus = pagePlus + 1;
                <li class="page-item">
                    <button class="page-link" onclick="loadSectionPostPaginated(@pagePlusPlus)">@pagePlusPlus</button>
                </li>
            }
            @if (!Model.BlogPosts.HasNextPage)
            {
                <li class="page-item active">
                    <button class="page-link" onclick="loadSectionPostPaginated(@Model.BlogPosts.TotalPages)">@Model.BlogPosts.TotalPages</button>
                </li>
            }

            <!-- Boton de Next -->
            <li class="page-item @nextDisabled">
                <button class="page-link" onclick="loadSectionPostPaginated(@pagePlus)">Next</button>
            </li>
        </ul>
    </nav>
}


<script>
    function loadSectionPostPaginated(pageIndex) {

        let div_containerLastBlogPost = document.getElementById('container-blogpost')
        let hasContainerLastBlogPost = (div_containerLastBlogPost === null ? false : true)
        let url = "/BlogPosts/GetPartialView_SectionPostPaginated/?PageIndex=" + pageIndex + "&RegisterPostVisit=" + hasContainerLastBlogPost

        fetch(url)
            .then(function (res) {
                return res.json()
            })
            .then(function (result) {
                if (result.response) {
                    document.getElementById('container_pagination_posts').innerHTML = result.viewPaginationPosts
                    if (hasContainerLastBlogPost) {
                        div_containerLastBlogPost.innerHTML = result.viewPostActive
                    }
                }
            })
            .catch(function (err) {
                alert(err)
            })

    }

    function cardPost_Click(postId) {
        // Asi se debe de llamar la funcion que ejecuta el click del card del post
        callback_cardPost_Click(postId)
    }

</script>
